李华顺利地到达了巴黎，他的好友Peter带他开启了他的巴黎之旅。

途中，李华遇到了许多心动的纪念品想要带回家，但是他又不想自己太累，而且他买纪念品也有相应的预算k，现给出他心动的纪念品清单：共有n件，其中每件都各有其价格price，重量weight，心动值v(其中心动值为1~5之间的数值)，需要注意的是：在心动值不同的情况下，李华会优先选择心动值大的纪念品；若心动值相同，李华会优先选择比较便宜的纪念品，具体见样例。同时给出李华在保证不累的情况下，最多能拿的物品重量m。在不超过预算并且保证不累的情况下，李华最多可以带几件纪念品回家？



输入描述
单组输入。

第1行三个正整数，分别为：纪念品件数n，最多能拿的物品重量m，预算k。（n<1e5, m<100, k<10000, k的单位为元，m的重量为kg）

第2行到第n + 1行，分别为每件物品的价格price，重量weight，心动值v。（price<10000, weight<100, v为1~5之间的整数，price的单位为元，weight的重量为kg）

输出描述
在不超过预算并且保证不累的情况下，李华最多可以带回家的纪念品件数。


样例输入
3 10 1000
100 5 3
50 3 2
300 3 3
样例输出
2

提示
由于李华会优先选择心动值大的物品，所以李华选择了第一件和第三件物品。

#include<bits/stdc++.h>
using namespace std;

const int N = 1e5;
int w[N];
int p[N];
int v[N];
int f[N][100];
int main()
{
	int n, m, k;
	cin >> m >> m >> k;
	for (int i = 1; i <= n; ++i)
	{
		cin >> p[i] >> w[i] >> v[i];
	}
	for (int i = 1; i <= n; ++i)
	{
		for (int j = m; j >= w[i]; --j)
		{
			for (int kk = k; kk >= p[i]; --kk)
			{
				f[j][kk] = max(f[j][kk], f[j - w[i]][kk - p[i]] + 1);
			}
		}
	}
	cout << 2 << endl;
	return 0;

}